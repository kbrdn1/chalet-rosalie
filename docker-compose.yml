services: 
    chalet-rosalie:
        image: chalet-rosalie:latest
        ports:
            - '8000:8000'
        environment:
            APP_ENV: production
            APP_DEBUG: false
            WWWUSER: '${WWWUSER}'
            WWWGROUP: '${WWWGROUP}'
            DB_HOST: mysql-rosalie
        depends_on:
            - mysql-rosalie
            # - redis-rosalie
            # - minio-rosalie
        networks:
            - sail-rosalie

    nginx-rosalie:
        image: nginx:alpine
        ports:
          - "80:80"
          - "443:443"  # Pour HTTPS
        volumes:
          - ./docker/nginx/conf.d:/etc/nginx/conf.d
          - ./docker/nginx/ssl:/etc/nginx/ssl
          - ./:/var/www/app
        networks:
          - sail-rosalie
        depends_on:
          - mysql-rosalie

    mysql-rosalie:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            TZ: '${APP_TIMEZONE}'
        volumes:
            - 'sail-mysql-rosalie:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        command: '--skip-networking=0 --socket=/var/run/mysqld/custom.sock'
        networks:
            - sail-rosalie
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    # redis-rosalie:
    #     image: 'redis:alpine'
    #     ports:
    #         - '${FORWARD_REDIS_PORT:-6379}:6379'
    #     command: 'redis-server --requirepass ${REDIS_PASSWORD}'
    #     environment:
    #         - 'REDIS_PASSWORD=${REDIS_PASSWORD}'
    #     volumes:
    #         - 'sail-redis-rosalie:/data'
    #     networks:
    #         - sail-rosalie
    #     healthcheck:
    #         test:
    #             - CMD
    #             - redis-cli
    #             - ping
    #         retries: 3
    #         timeout: 5s

    # minio-rosalie:
    #     image: 'minio/minio:latest'
    #     ports:
    #         - '${FORWARD_MINIO_PORT:-9000}:9000'
    #         - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
    #     environment:
    #         MINIO_ROOT_USER: ${MINIO_ROOT_USER}
    #         MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    #     volumes:
    #         - 'sail-minio-rosalie:/data'
    #     networks:
    #         - sail-rosalie
    #     command: 'minio server /data --console-address ":8900"'
    #     healthcheck:
    #         test:
    #             - CMD
    #             - mc
    #             - ready
    #             - local
    #         retries: 3
    #         timeout: 5s
    adminer-rosalie:
        image: adminer
        restart: always
        ports:
            - '8080:8080'
        depends_on:
            - mysql-rosalie
        networks:
            - sail-rosalie

volumes:
    sail-mysql-rosalie:
        driver: local
    sail-redis-rosalie:
        driver: local
    sail-minio-rosalie:
        driver: local
networks:
    sail-rosalie:
        driver: bridge
    default:
        driver: bridge